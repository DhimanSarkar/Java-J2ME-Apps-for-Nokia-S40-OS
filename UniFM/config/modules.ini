; This file describes modules in general.
; Sections, like [Container] or [Application], define type of a module. Containers are used to transparently open various archives and packages of files, Applications are used to display file contents to the user and to edit those contents.
; FileSources are used to create new files. ContainerSources are technically similar to FileSources, but are used to create containers rather than simple files and are stored in separate internal list.

; Each record in this file has the following syntax:
; module.package.ModuleClass = <explicit_name | #localized_string_identifier> [, icon_file.ext [@ x, y, width, height]]

; If you plan to obfuscate your module, don't forget to tell your obfuscator to adapt the contents of this file.
; For ProGuard it is done like that: -adaptresourcefilecontents config/*

[Application]

;modules.PlatformRequestModule	=	# 317,	icons.png @  0, 0, 16, 16
modules.audio.AudioModule		=	# 213,	icons.png @ 16, 0, 16, 16
modules.image.ImageModule		=	# 214,	icons.png @ 32, 0, 16, 16
modules.video.VideoModule		=	# 215,	icons.png @ 48, 0, 16, 16
modules.text.TextModule			=	# 216,	icons.png @ 64, 0, 16, 16
modules.TMOModule				=	# 217,	icons.png @ 96, 0, 16, 16
modules.audio.TrackerModule		=	# 218,	icons.png @ 16, 0, 16, 16
modules.color.ColorModule		=	# 219,	icons.png @ 32, 0, 16, 16
modules.FontModule			=	# 381,	icons.png @ 96, 0, 16, 16
modules.image.VectorModule		=	# 220,	icons.png @ 32, 0, 16, 16
modules.viart.VectorModule		=	# 133,	icons.png @ 32, 0, 16, 16	; /modules/viart/img/icon.png
modules.convert.PNGConverter		=	# 411,	icons.png @ 32, 0, 16, 16
modules.mascot.MascotViewer		=	# 0,		icons.png @ 32, 0, 16, 16
modules.mascot.AnimationViewer	=	# 1,		icons.png @ 48, 0, 16, 16
modules.mascot.TextureLoader		=	# 2,		icons.png @ 32, 0, 16, 16
modules.id3Editor				=	# 113,	icons.png @ 16, 0, 16, 16
modules.playlist.M3UModule		=	# 281,	icons.png @ 16, 0, 16, 16
modules.temp.TMSModule			=	# 386,	icons_new.png @ 64, 0, 16, 16
modules.temp.OMTModule			=	# 385,	icons_new.png @ 64, 0, 16, 16
modules.split.FileSplitter		=	# 1,		icons.png @  0, 0, 16, 16
modules.langpack.StringUnpacker	=	# 0,		icons.png @ 400,	0, 16, 16
modules.langpack.StringPacker		=	# 1,		icons.png @ 528,	0, 16, 16
modules.sfc.GZipModule			=	# 342,	icons.png @ 80, 0, 16, 16
modules.sfc.BZipModule			=	# 344,	icons.png @ 80, 0, 16, 16

[Container]

a.e.c.k							=	# 211,	icons.png @ 80, 0, 16, 16
a.a.a.c							=	# 325,	icons.png @ 80, 0, 16, 16
c.a.b.a.b.a.a			=	# 339,	icons.png @ 80, 0, 16, 16
a.b.ad								=	# 212,	icons.png @ 80, 0, 16, 16

;com.one.FTPContainer								=	# 388,	icons.png @ 112, 0, 16, 16

[Operation]

b.o			=	# 380,	icons.png @ 320,	0, 16, 16
b.be			=	# 388,	icons.png @ 352,	0, 16, 16

[FileSource]

modules.text.TextFileSource		=	# 369,	icons.png @ 64, 0, 16, 16
modules.viart.VectorFileSource	=	# 134,	/modules/viart/img/icon.png	; icons.png @ 32, 0, 16, 16
modules.NullFileSource			=	# 282,	icons.png @  0, 0, 16, 16
modules.split.FileSplicer		=	# 0,		icons.png @  0, 0, 16, 16
modules.temp.TMSFileSource		=	# 387,	icons_new.png @ 64, 0, 16, 16
modules.playlist.M3UFileSource	=	# 204,	icons.png @ 16, 0, 16, 16
modules.color.ColorFileSource		=	# 152,	icons.png @ 32, 0, 16, 16

[ContainerSource]

modules.cfs.ZipFileSource		=	# 287,	icons.png @ 80, 0, 16, 16
modules.sfc.GZipFileSource		=	# 343,	icons.png @ 80, 0, 16, 16
modules.sfc.BZipFileSource		=	# 345,	icons.png @ 80, 0, 16, 16
modules.cfs.TarFileSource		=	# 340,	icons.png @ 80, 0, 16, 16
modules.cfs.PPKFileSource		=	# 288,	icons.png @ 80, 0, 16, 16